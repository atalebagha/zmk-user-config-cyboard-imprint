#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>

/ {
    chosen { zmk,matrix-transform = &imprint_function_row; };

    macros {
        double_r_bkt: double_r_bkt {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LBKT &kp LBKT>;
            label = "DOUBLE_R_BKT";
        };

        double_l_bkt: double_l_bkt {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press>, <&kp RBKT &kp RBKT>;

            label = "DOUBLE_L_BKT";
        };

        right_bfr: right_bfr {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RBKT &kp B>;
            label = "RIGHT_BFR";
        };

        left_bfr: left_bfr {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LBKT &kp B>;
            label = "LEFT_BFR";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp CAPS           &kp F1       &kp F2           &kp F3          &kp F4         &kp F5                            &kp F6         &kp F7        &kp F8          &kp F9          &kp F10         &kp F11
&kp EQUAL          &kp N1       &kp N2           &kp N3          &kp N4         &kp N5                            &kp N6         &kp N7        &kp N8          &kp N9          &kp N0          &kp MINUS
&kp TAB            &kp Q        &kp W            &kp E           &kp R          &kp T                             &kp Y          &kp U         &kp I           &kp O           &kp P           &kp BSLH
&kp ESC            &mt LSHFT A  &mt LCTRL S      &mt LALT D      &mt LGUI F     &kp G                             &kp H          &mt RGUI J    &mt RALT K      &mt RCTRL L     &mt RSHFT SEMI  &kp SQT
&mt LSHFT LC(LEFT) &kp Z        &kp X            &kp C           &kp V          &kp B                             &kp N          &kp M         &kp COMMA       &kp DOT         &kp FSLH        &mt RSHFT LC(RIGHT)
                        &mt LCTRL GRAVE  &mt LALT EQUAL                                                                                &mt RALT LBKT   &mt RCTRL RBKT
                                                         &kp LC(LEFT)   &kp LC(D)        &double_l_bkt    &double_r_bkt  &kp LC(U)     &kp RC(RIGHT)
                                                         &mt LGUI BSPC  &lt 1 LC(SLASH)  &left_bfr        &right_bfr     &lt 2 RETURN  &mt RGUI SPACE
            >;
        };

        Layer__1 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans            &trans        &trans        &trans    &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans        &trans        &trans    &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans        &kp HOME      &kp UP    &kp END    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans        &kp LEFT      &kp DOWN  &kp RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans        &trans        &trans    &trans     &trans  &trans
                &trans  &trans                                                        &trans    &trans
                                &trans  &trans  &trans    &kp C_VOL_DN  &kp C_VOL_UP  &kp C_PP
                                &trans  &trans  &trans    &kp C_PREV    &kp C_NEXT    &trans
            >;
        };

        Layer__2 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &rgb_ug RGB_TOG  &trans           &trans           &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &rgb_ug RGB_TOG  &trans           &trans           &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans           &trans           &trans           &trans  &trans
                &trans  &trans                                                     &trans           &trans
                                &trans  &trans  &trans    &trans  &trans           &trans
                                &trans  &trans  &trans    &trans  &trans           &trans
            >;
        };
    };
};
